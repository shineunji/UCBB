buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:1.2.4.RELEASE") // 서버재시작 없이 파일 변경 반영
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

war {
	baseName = 'springboot-gradle-demo'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.projectlombok:lombok:1.16.0')
	compile('mysql:mysql-connector-java:5.1.28')
	compile('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc3:1.16')


	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	compile group: 'org.hibernate', name: 'hibernate-c3p0', version: '5.2.12.Final'

	compile group: 'com.google.http-client', name: 'google-http-client', version:'1.22.0'
	compile group: 'com.google.http-client', name: 'google-http-client-jackson2', version:'1.22.0'

	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
	providedRuntime('javax.servlet:jstl') // JSTL 사용하기 위한 라이브러리
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat') // 외부 톰캣 사용을 위해 추가(war로 배포)
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

processResources {
	filesMatching("**/application.yml") {
//		expand(project.properties)
	}
}
